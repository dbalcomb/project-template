name: Prepare

on:
  workflow_dispatch:
    inputs:
      package:
        description: Package to release
        required: true
        type: choice
        options:
        - project-template
        - project-template-macros

      bump:
        description: Version to bump
        required: true
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  pull_request:
    name: Pull Request
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install
      uses: taiki-e/install-action@v1
      with:
        tool: cargo-edit

    - id: config
      name: Config
      run: |
        pkg_name="${{ github.event.inputs.package }}"
        pkg_bump="${{ github.event.inputs.bump }}"

        repo="${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}"
        metadata=$(cargo metadata --no-deps --format-version 1)
        pkg_ok=$(echo $metadata | jq -r --arg name $pkg_name ".packages | any(.name == \$name)")

        if [[ $pkg_ok != "true" ]]; then
          echo "Package '$pkg_name' was not found."
          exit 1
        fi

        cargo set-version --package "$pkg_name" --bump "$pkg_bump"
        cargo check --package "$pkg_name"

        metadata=$(cargo metadata --no-deps --format-version 1)
        pkg_vers=$(echo $metadata | jq -r --arg name $pkg_name ".packages | map(select(.name == \$name))[0] | .version")
        pkg_short="${pkg_name#$repo-}"

        if [[ "$pkg_short" == "$pkg_name" ]]; then
          branch="prepare/$pkg_vers"
          title="Release $pkg_vers"
        else
          branch="prepare/$pkg_short/$pkg_vers"
          title="Release $pkg_short $pkg_verse"
        fi

        echo "::set-output name=branch::$branch"
        echo "::set-output name=title::$title"
      shell: bash

    - id: generate-token
      name: Generate Token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.APP_ID }}
        private_key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v4
      with:
        branch: "${{ steps.config.outputs.branch }}"
        title: "${{ steps.config.outputs.title }}"
        body: |
          Creates a new release.

          This is an automated pull request generated by the [prepare][1] workflow.

          [1]: https://github.com/dbalcomb/project-template/blob/main/.github/workflows/prepare.yml
        labels: "release"
        commit-message: "Prepare release"
        delete-branch: true
        token: ${{ steps.generate-token.outputs.token }}
